/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package onlinebanking;
import java.awt.Color;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.Box;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Transfer extends javax.swing.JFrame {

    public static String AccountNo = new Login().AccountNum;
    public Connection conn;
    public static String pass;
    public static String ReceiverAccountNum;
    public static String EnteredAmount;
    private static String DB_URL ="jdbc:sqlserver://localhost:1500;" 
            + "databaseName=NTD_Bank;" + "integratedSecurity=true";
    private static String USER_NAME = "sa";
    private static String PASSWORD = "03082004khoi";
    
    /**
     * Creates new form Transfer
     */
    public Transfer() {
        initComponents();
        GetAccountNumber();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Background = new javax.swing.JPanel();
        Heading = new javax.swing.JPanel();
        HeadingLB = new javax.swing.JLabel();
        AccountNumber = new javax.swing.JLabel();
        ReceiverAccount = new javax.swing.JLabel();
        Amount = new javax.swing.JLabel();
        AccNumber = new javax.swing.JTextField();
        ReceiverAcc = new javax.swing.JTextField();
        TransferAmount = new javax.swing.JTextField();
        TransferBtn = new javax.swing.JButton();
        BackBtn = new javax.swing.JLabel();
        TransactionHis = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TransactionHistory = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Background.setBackground(new java.awt.Color(255, 255, 255));

        Heading.setBackground(new java.awt.Color(0, 204, 153));

        HeadingLB.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        HeadingLB.setForeground(new java.awt.Color(255, 255, 255));
        HeadingLB.setText("TRANSACTION");

        javax.swing.GroupLayout HeadingLayout = new javax.swing.GroupLayout(Heading);
        Heading.setLayout(HeadingLayout);
        HeadingLayout.setHorizontalGroup(
            HeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HeadingLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HeadingLB)
                .addGap(401, 401, 401))
        );
        HeadingLayout.setVerticalGroup(
            HeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeadingLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(HeadingLB)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        AccountNumber.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AccountNumber.setText("My Account Number:");

        ReceiverAccount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ReceiverAccount.setText("Receiver Account:");

        Amount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Amount.setText("Transfer Amount:");

        AccNumber.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        AccNumber.setEnabled(false);

        ReceiverAcc.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        TransferAmount.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N

        TransferBtn.setBackground(new java.awt.Color(0, 204, 153));
        TransferBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TransferBtn.setForeground(new java.awt.Color(255, 255, 255));
        TransferBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/transfer-icon.png"))); // NOI18N
        TransferBtn.setText("Transfer");
        TransferBtn.setToolTipText("");
        TransferBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        TransferBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransferBtnActionPerformed(evt);
            }
        });

        BackBtn.setFont(new java.awt.Font("Tahoma", 0, 19)); // NOI18N
        BackBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/goback.png"))); // NOI18N
        BackBtn.setText("Back");
        BackBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BackBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackBtnMouseClicked(evt);
            }
        });

        TransactionHis.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TransactionHis.setText("Transaction History:");

        TransactionHistory.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TransactionHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Account Number", "Amount", "ReceiverAccount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TransactionHistory);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("$");

        javax.swing.GroupLayout BackgroundLayout = new javax.swing.GroupLayout(Background);
        Background.setLayout(BackgroundLayout);
        BackgroundLayout.setHorizontalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addComponent(AccountNumber)
                                .addGap(201, 201, 201)
                                .addComponent(TransactionHis)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(BackgroundLayout.createSequentialGroup()
                                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TransferAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Amount)
                                    .addComponent(ReceiverAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ReceiverAccount)
                                    .addComponent(AccNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(BackgroundLayout.createSequentialGroup()
                                        .addGap(71, 71, 71)
                                        .addComponent(TransferBtn)))
                                .addGap(84, 84, 84)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 581, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BackBtn)))
                .addContainerGap())
        );
        BackgroundLayout.setVerticalGroup(
            BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundLayout.createSequentialGroup()
                .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(TransactionHis))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BackgroundLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AccountNumber)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BackgroundLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(AccNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ReceiverAccount)
                        .addGap(18, 18, 18)
                        .addComponent(ReceiverAcc, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(Amount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(BackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TransferAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(40, 40, 40)
                        .addComponent(TransferBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(BackBtn)
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackBtnMouseClicked
        // TODO add your handling code here:
        setVisible(false);
        dispose();
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_BackBtnMouseClicked

    private void TransferBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransferBtnActionPerformed
        // TODO add your handling code here:
        boolean Checker;
        
        ReceiverAccountNum = ReceiverAcc.getText();
        EnteredAmount = TransferAmount.getText();
        if(ReceiverAccountNum.length()<=12 && ReceiverAccountNum.matches("^[0-9]*$"))
        {
            Checker = true;
            ReceiverAcc.setBackground(new Color(0,204,153));
        }
        else
        {
            Checker=false;
            ReceiverAcc.setBackground(new Color(246, 53, 40));
            JOptionPane.showMessageDialog(null,"Account Number is invalid or not found bank customer");
        }
        if(TransferAmount.getText().length()<=7 && TransferAmount.getText().matches("^[0-9]*$")){
            Checker=true;
            TransferAmount.setBackground(new Color(0,204,153));
        }
        if(!"".equals(TransferAmount.getText()) && !"0".equals(TransferAmount.getText())){
            Checker=true;
            TransferAmount.setBackground(new Color(0,204,153));
        }
        else{
            Checker=false;
            TransferAmount.setBackground(new Color(246, 53, 40));
            JOptionPane.showMessageDialog(null,"Please Enter Valid Amount or between 1 to 1000000");
        }
        if(Checker == true)
        {
            try
            {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                conn = DriverManager.getConnection(DB_URL,USER_NAME,PASSWORD);
                String query = "Select * from CustomerDetail where AccountNumber=?";
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setString(1,ReceiverAccountNum);
                ResultSet rs = pst.executeQuery();
                if(rs.next()&&(!ReceiverAccountNum.equals(AccNumber)))
                {
                    Transfer();
                    TransactionHistory();
                }
                conn.close();
            }catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_TransferBtnActionPerformed

    //-------------------------------------------------------Transfer---------------------------------------------------------//
    public void Transfer()
    {
        Box box = Box.createHorizontalBox();
        JLabel lb = new JLabel("Password: ");
        box.add(lb);
        JPasswordField pf = new JPasswordField(14); 
        box.add(pf);
        
        int button = JOptionPane.showConfirmDialog(null,box,"Enter your Password",JOptionPane.OK_CANCEL_OPTION);
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(DB_URL,USER_NAME,PASSWORD);
            String query1 = "Select LoginDetail.*,CustomerDetail.* from LoginDetail inner join CustomerDetail on LoginDetail.AccountNumber=CustomerDetail.AccountNumber where LoginDetail.AccountNumber='"+AccountNo+"'";
            String query2 = "Select * from CustomerDetail where AccountNumber='"+ReceiverAccountNum+"'";
            PreparedStatement pst1 = conn.prepareStatement(query1);
            PreparedStatement pst2 = conn.prepareStatement(query2);
            ResultSet rs1 = pst1.executeQuery();
            ResultSet rs2 = pst2.executeQuery();
            if(rs1.next())
            {
                pass = rs1.getString("Password");
                String SenderBalance,ReceiverBalance;
                if(button == JOptionPane.OK_OPTION)
                {
                    char[] input = pf.getPassword();
                    String enteredPass = String.valueOf(input);
                    if(enteredPass.equals(pass))
                    {
                        SenderBalance = rs1.getString("Balance");
                        if(rs2.next())
                        {
                            ReceiverBalance = rs2.getString("Balance");
                            int senderBalance,receiverBalance,enterAmount;
                            senderBalance = Integer.parseInt(SenderBalance);
                            enterAmount = Integer.parseInt(EnteredAmount);
                            receiverBalance = Integer.parseInt(ReceiverBalance);
                            
                            if(senderBalance >= enterAmount)
                            {
                                int SenderBalanceSubstraction = senderBalance - enterAmount;
                                int ReceiverBalanceAddition = enterAmount + receiverBalance;
                                String SenderBalanceUpdate = Integer.toString(SenderBalanceSubstraction);
                                String ReceiverBalanceUpdate = Integer.toString(ReceiverBalanceAddition);
                                try
                                {
                                    String query3 = "Update CustomerDetail set Balance='"+SenderBalanceUpdate+"' where AccountNumber='"+AccountNo+"'";
                                    String query4= "Update CustomerDetail set Balance='"+ReceiverBalanceUpdate+"' where AccountNumber='"+ReceiverAccountNum+"'";
                                    PreparedStatement pst3 = conn.prepareStatement(query3);
                                    PreparedStatement pst4 = conn.prepareStatement(query4);
                                    pst3.execute();
                                    pst4.execute();
                                    
//                                  Transaction History
                                    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                                    String Date = sdf.format(new Date());
                                    String query5 = "Insert into TransactionHistory(Date,AccountNumber,Amount,ReceiverAccount) values('"+Date+"','"+AccountNo+"','"+enterAmount+"','"+ReceiverAccountNum+"')";
                                    PreparedStatement pst5 = conn.prepareStatement(query5);
                                    pst5.execute();
                                    
                                    JOptionPane.showMessageDialog(null, "Transaction Successfully !");
                                    ReceiverAcc.setText("");
                                    TransferAmount.setText("");
                                    
                                }catch(Exception e)
                                {
                                    JOptionPane.showMessageDialog(null,e);
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null,"Insufficient balance in your account. Please check it again !");
                                TransferAmount.setText("");
                            }
                            
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null,"Invalid Password !","ERROR",JOptionPane.ERROR_MESSAGE);
                    }
                }
                
            }
            conn.close();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
        
    }
    public void TransactionHistory()
    {
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(DB_URL,USER_NAME,PASSWORD);
            String query = "Select * from TransactionHistory where AccountNumber='"+AccountNo+"'";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            DefaultTableModel tableModel = (DefaultTableModel)TransactionHistory.getModel();
            tableModel.setRowCount(0);
            while(rs.next())
            {
                String SenderDate = rs.getString("Date");
                String SenderAc = rs.getString("AccountNumber");
                String Senderamount = rs.getString("Amount");
                String ReceiverAC = rs.getString("ReceiverAccount");
                String SenderTableData[] ={SenderDate, SenderAc, Senderamount, ReceiverAC};
                tableModel = (DefaultTableModel)TransactionHistory.getModel();
                tableModel.addRow(SenderTableData);
            }
            conn.close();       
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    public void GetAccountNumber()
    {
        try
        {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            conn = DriverManager.getConnection(DB_URL,USER_NAME,PASSWORD);
            String query = "Select AccountNumber from LoginDetail where AccountNumber='"+AccountNo+"'";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            if(rs.next())
            {
                AccNumber.setText(rs.getString("AccountNumber"));
            }
            
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transfer().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AccNumber;
    private javax.swing.JLabel AccountNumber;
    private javax.swing.JLabel Amount;
    private javax.swing.JLabel BackBtn;
    private javax.swing.JPanel Background;
    private javax.swing.JPanel Heading;
    private javax.swing.JLabel HeadingLB;
    private javax.swing.JTextField ReceiverAcc;
    private javax.swing.JLabel ReceiverAccount;
    private javax.swing.JLabel TransactionHis;
    private javax.swing.JTable TransactionHistory;
    private javax.swing.JTextField TransferAmount;
    private javax.swing.JButton TransferBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
